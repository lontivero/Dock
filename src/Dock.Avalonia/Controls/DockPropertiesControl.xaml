<!-- Copyright (c) Wiesław Šoltés. All rights reserved. -->
<!-- Licensed under the MIT license. See LICENSE file in the project root for full license information. -->
<UserControl x:Class="Dock.Avalonia.Controls.DockPropertiesControl"
             xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
             xmlns:ia="clr-namespace:Avalonia.Xaml.Interactions.Core;assembly=Avalonia.Xaml.Interactions"
             xmlns:id="clr-namespace:Dock.Avalonia;assembly=Dock.Avalonia"
             xmlns:idc="clr-namespace:Dock.Avalonia.Controls;assembly=Dock.Avalonia"
             xmlns:ac="clr-namespace:Avalonia.Controls;assembly=Dock.Avalonia"
             xmlns:Dock="clr-namespace:Dock.Model;assembly=Dock.Model"
             xmlns:Controls="clr-namespace:Dock.Model.Controls;assembly=Dock.Model"
             Design.Width="600" Design.Height="540">
    <UserControl.Resources>
        <id:DockListBoxDropHandler x:Key="DockListBoxDropHandler"/>
    </UserControl.Resources>
    <UserControl.Styles>
        <Style Selector="TextBlock.drag">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
        </Style>
        <Style Selector="TabStripItem">
            <Setter Property="Margin" Value="4"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="FontSize" Value="12"/>
        </Style>
        <Style Selector="TextBlock">
            <Setter Property="Margin" Value="2"/>
        </Style>
        <Style Selector="TextBox">
            <Setter Property="Margin" Value="2"/>
        </Style>
        <Style Selector="CheckBox">
            <Setter Property="Margin" Value="2"/>
        </Style>
        <Style Selector="Button">
            <Setter Property="Margin" Value="2"/>
        </Style>
    </UserControl.Styles>
    <TabControl>
        <TabItem Header="Dock">
            <ScrollViewer>
                <Grid RowDefinitions="Auto,Auto,Auto,Auto,Auto,Auto,Auto,Auto,Auto,Auto,Auto" ColumnDefinitions="Auto,*" Margin="4">
                    <TextBlock Text="Id:" Grid.Row="0" Grid.Column="0"/>
                    <TextBox Text="{Binding Id, Mode=TwoWay}" Grid.Row="0" Grid.Column="1"/>
                    <TextBlock Text="Dock:" Grid.Row="1" Grid.Column="0"/>
                    <TextBox Text="{Binding Dock, Mode=TwoWay}" Grid.Row="1" Grid.Column="1"/>
                    <TextBlock Text="Width:" Grid.Row="2" Grid.Column="0"/>
                    <TextBox Text="{Binding Width, Mode=TwoWay}" Grid.Row="2" Grid.Column="1"/>
                    <TextBlock Text="Height:" Grid.Row="3" Grid.Column="0"/>
                    <TextBox Text="{Binding Height, Mode=TwoWay}" Grid.Row="3" Grid.Column="1"/>
                    <TextBlock Text="Title:" Grid.Row="4" Grid.Column="0"/>
                    <TextBox Text="{Binding Title, Mode=TwoWay}" Grid.Row="4" Grid.Column="1"/>
                    <TextBlock Text="Context:" Grid.Row="5" Grid.Column="0"/>
                    <TextBox Text="{Binding Context, Mode=OneWay, FallbackValue={x:Null}}" IsReadOnly="True" Grid.Row="5" Grid.Column="1"/>
                    <TextBlock Text="Parent:" Grid.Row="6" Grid.Column="0"/>
                    <TextBox Text="{Binding Parent.Title, Mode=OneWay, FallbackValue={x:Null}}" IsReadOnly="True" Grid.Row="6" Grid.Column="1"/>
                    <TextBlock Text="CurrentView:" Grid.Row="7" Grid.Column="0"/>
                    <TextBox Text="{Binding CurrentView.Title, Mode=OneWay, FallbackValue={x:Null}}" IsReadOnly="True" Grid.Row="7" Grid.Column="1"/>
                    <TextBlock Text="DefaultView:" Grid.Row="8" Grid.Column="0"/>
                    <TextBox Text="{Binding DefaultView.Title, Mode=OneWay, FallbackValue={x:Null}}" IsReadOnly="True" Grid.Row="8" Grid.Column="1"/>
                    <TextBlock Text="CanGoBack:" Grid.Row="9" Grid.Column="0"/>
                    <CheckBox IsChecked="{Binding CanGoBack, Mode=OneWay}" IsEnabled="False" Grid.Row="9" Grid.Column="1"/>
                    <TextBlock Text="CanGoForward:" Grid.Row="10" Grid.Column="0"/>
                    <CheckBox IsChecked="{Binding CanGoForward, Mode=OneWay}" IsEnabled="False" Grid.Row="10" Grid.Column="1"/>
                </Grid>
            </ScrollViewer>
        </TabItem>
        <TabItem Header="Views">
            <ListBox x:Name="views" Items="{Binding Views}" Margin="4">
                <ListBox.KeyBindings>
                    <KeyBinding Command="{Binding Factory.Remove}" CommandParameter="{Binding #views.SelectedItem}" Gesture="Delete"/>
                </ListBox.KeyBindings>
                <ListBox.DataTemplates>
                    <DataTemplate DataType="Dock:IView">
                        <TextBlock Text="{Binding Title}" Classes="drag">
                            <i:Interaction.Behaviors>
                                <id:DragBehavior Context="{Binding}"/>
                                <id:DropBehavior Context="{Binding}" Handler="{StaticResource DockListBoxDropHandler}"/>
                            </i:Interaction.Behaviors>
                            <TextBlock.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="_Remove" Command="{Binding Factory.Remove}" CommandParameter="{Binding}"/>
                                </ContextMenu>
                            </TextBlock.ContextMenu>
                        </TextBlock>
                    </DataTemplate>
                </ListBox.DataTemplates>
            </ListBox>
        </TabItem>
        <TabItem Header="Windows">
            <ListBox x:Name="windows" Items="{Binding Windows}" Margin="4">
                <ListBox.KeyBindings>
                    <KeyBinding Command="{Binding Factory.RemoveWindow}" CommandParameter="{Binding #windows.SelectedItem}" Gesture="Delete"/>
                </ListBox.KeyBindings>
                <ListBox.DataTemplates>
                    <DataTemplate DataType="Dock:IDockWindow">
                        <TextBlock Text="{Binding Title}" Classes="drag">
                            <i:Interaction.Behaviors>
                                <id:DragBehavior Context="{Binding}"/>
                            </i:Interaction.Behaviors>
                            <TextBlock.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="_Remove" Command="{Binding Factory.RemoveWindow}" CommandParameter="{Binding}"/>
                                </ContextMenu>
                            </TextBlock.ContextMenu>
                        </TextBlock>
                    </DataTemplate>
                </ListBox.DataTemplates>
            </ListBox>
        </TabItem>
    </TabControl>
</UserControl>
